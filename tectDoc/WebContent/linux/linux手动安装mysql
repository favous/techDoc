数据存放位置
mkdir /data
mkdir /data/mysql

cd /usr
tar -zxvf mysql-5.7.24-el7-x86_64.tar.gz

更改解压缩后的文件夹名为mysql
mv /usr/mysql-5.7.24-el7-x86_64/  /usr/mysql

创建mysql用户组和mysql用户
groupadd mysql
useradd -r -g mysql mysql

chown -R mysql:mysql  /usr/mysql/

chown -R mysql:mysql  /data/mysql/

chown -R mysql  /usr/mysql/

chown -R mysql  /data/mysql

更改mysql安装/usr/mysql/的权限
chmod -R 755 /usr/mysql/

查询是否暗转libaio依赖包
yum search libaio
如果没安装，可以用下面命令安装
yum install libaio

初始化mysql命令
cd /usr/mysql/bin
./mysqld --user=mysql --basedir=/usr/mysql --datadir=/data/mysql --initialize

A temporary password is generated for root@localhost: I,Yq/0qS.Gkq
A temporary password is generated for root@localhost: hx?lqKJiu0a.

启动mysql服务试试，发现会失败
sh /usr/mysql/support-files/mysql.server start

修改Mysql配置文件里的路径
vim /usr/mysql/support-files/mysql.server
把一段代码改成如下
mysqld_pid_file_path=
if test -z "$basedir"
then
  basedir=/usr/mysql
  bindir=/usr/mysql/bin
  if test -z "$datadir"
  then
    datadir=/data/mysql
  fi
  sbindir=/usr/mysql/bin
  libexecdir=/usr/mysql/bin
else
  bindir="$basedir/bin"
  if test -z "$datadir"
  then
    datadir="$basedir/data"
  fi
  sbindir="$basedir/sbin"
  libexecdir="$basedir/libexec"
fi

cp /usr/mysql/support-files/mysql.server  /etc/init.d/mysqld

复制替换当前的my.cnf
[client]
no-beep
socket =/usr/mysql/mysql.sock
# pipe
# socket=0.0
port=3306
[mysql]
default-character-set=utf8
[mysqld]
basedir=/usr/mysql
datadir=/data/mysql
port=3306
pid-file=/usr/mysql/mysqld.pid
#skip-grant-tables
skip-name-resolve
socket = /usr/mysql/mysql.sock
character-set-server=utf8
default-storage-engine=INNODB
explicit_defaults_for_timestamp = true
# Server Id.
server-id=1
max_connections=2000
query_cache_size=0
table_open_cache=2000
tmp_table_size=246M
thread_cache_size=300
#限定用于每个数据库线程的栈大小。默认设置足以满足大多数应用
thread_stack = 192k
key_buffer_size=512M
read_buffer_size=4M
read_rnd_buffer_size=32M
innodb_data_home_dir = /data/mysql
innodb_flush_log_at_trx_commit=0
innodb_log_buffer_size=16M
innodb_buffer_pool_size=256M
innodb_log_file_size=128M
innodb_thread_concurrency=128
innodb_autoextend_increment=1000
innodb_buffer_pool_instances=8
innodb_concurrency_tickets=5000
innodb_old_blocks_time=1000
innodb_open_files=300
innodb_stats_on_metadata=0
innodb_file_per_table=1
innodb_checksum_algorithm=0
back_log=80
flush_time=0
join_buffer_size=128M
max_allowed_packet=1024M
max_connect_errors=2000
open_files_limit=4161
query_cache_type=0
sort_buffer_size=32M
table_definition_cache=1400
binlog_row_event_max_size=8K
sync_master_info=10000
sync_relay_log=10000
sync_relay_log_info=10000
#批量插入数据缓存大小，可以有效提高插入效率，默认为8M
bulk_insert_buffer_size = 64M
interactive_timeout = 120
wait_timeout = 120
log-bin-trust-function-creators=1
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES

#
# include all files from the config directory
#
!includedir /etc/my.cnf.d

开启mysql
/etc/init.d/mysqld start

登录mysql，输入之前生成的随机的密码
/usr/mysql/bin/mysql -u root -p

修改密码，root用户权限设置
set password=password('root');
只能在修改密码后赋权限
grant all privileges on *.* to root@'%' identified by 'root';
flush privileges;

可以查看mysqld状态与端口
netstat -anp|grep mysqld


防火墙设置
启动： systemctl start firewalld
关闭： systemctl stop firewalld
查看状态： systemctl status firewalld 
开机禁用  ： systemctl disable firewalld
开机启用  ： systemctl enable firewalld
查看firewalld是否安装：
rpm -q firewalld
查看firewalld状态：
firewall-cmd --state
查看所有端口状态
firewall-cmd --zone=public --list-ports
查看某个端口状态
firewall-cmd --zone=public --query-port=80/tcp
开启一个端口（--permanent表示永久生效，没有此参数重启后失效）
firewall-cmd --zone=public --add-port=80/tcp --permanent
重新载入
firewall-cmd --reload
删除一个端口
firewall-cmd --zone=public --remove-port=80/tcp --permanent

修改密码
/etc/init.d/mysqld stop
cd /usr/mysql/bin/
切换登录为安全模式
./mysqld_safe --skip-grant-tables &
登录
./mysql 
use mysql;
select user, host, authentication_string from user;
update user set authentication_string=password('root') where user='root'and Host = 'localhost';
或set password for 'root'@'localhost'=password('123');
只能在修改密码后赋权限
grant all privileges on *.* to root@'%' identified by 'root';
flush privileges;
quit;

外网设置
